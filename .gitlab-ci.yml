image: maven:3.9.6-eclipse-temurin-21

stages:
  - code_quality
  - test
  - release
  - deploy

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  AZURE_WEBAPP_NAME: "mon-serveur"
  AZURE_RESOURCE_GROUP: "mon-groupe"
  AZURE_SUBSCRIPTION_ID: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"

cache:
  key: maven-cache
  paths:
    - .m2/repository

# Stage 1 : Analyse de la qualite du code

# Analyse les potentielles erreurs de logique (manipulation incorrecte des objets, erreur d'injection)
spotbug:
  stage: code_quality
  script:
    - mvn spotbugs:check
  only:
    - merge_requests
  artifacts:
    when: always
    paths:
      - target/spotbugs-report.html
    expire_in: 1 day

# Analyse statique du code, assure le formattage, les conventions de nommage et la documentation
checkstyle:
  stage: code_quality
  script:
    - mvn checkstyle:check
  only:
    - merge_requests
  artifacts:
    when: always
    paths:
      - target/checkstyle-result.xml
    expire_in: 1 day

# Analyse des dependances pour trouver des vulnerabilites communes
dependency-check:
  stage: code_quality
  script:
    - mvn dependency-check:aggregate
  only:
    - master # Le scan de dependance etant long, on ne le fait qu'une fois au deploiement sur master
  artifacts:
    when: always
    paths:
      - target/dependency-check-report.html
    expire_in: 1 day

# Stage 2 : Execution des tests

test:
  stage: test
  script:
    - mvn test
  artifacts:
    paths:
      - target/surefire-reports
    expire_in: 1 day

# Stage 3: Preparation de la release (sur merge vers master)
release:
  stage: release
  script:
    - mvn release:prepare -B
  only:
    - master
